{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\n\nfunction createParserContext(template: any) {\n  return {\n    line: 1,\n    column: 1,\n    offset: 0,\n    source: template,//\u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u8FDB\u884C\u89E3\u6790\uFF0C\u4E5F\u5C31\u662F\u88AB\u6D88\u8D39\uFF0C\u5177\u4F53\u7528slice\u65B9\u6CD5\n    originalSource: template,\n  }\n}\n\n\nfunction isEnd(context) {\n  const source = context.source;\n  return !source;//\u89E3\u6790\u5230\u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u4E32\n}\nfunction getCursor(context) {\n  let { line, column, offset } = context;\n  return { line, column, offset };\n}\n\nfunction advancePositionWithMutation(context, source, endIndex) {\n  let lineCount = 0;\n  let linePos = -1;\n  for (let i = 0; i < endIndex; i++) {\n    if (source.charCodeAt(i) == 10) {//\u6362\u884C\u7B26\n      lineCount++;\n      linePos = i;\n    }\n  }\n  context.line += lineCount; \n  context.offset += endIndex;\n  context.column = linePos ==-1?context.column+endIndex:endIndex - linePos\n}\nfunction advanceBy(context, endIndex) {\n  let source = context.source;\n  //\u6BCF\u6B21\u5220\u9664\u5185\u5BB9\u7684\u65F6\u5019\uFF0C\u90FD\u8981\u66F4\u65B0\u6700\u65B0\u7684\u884C\u5217\u53F7\u548C\u504F\u79FB\u91CF\u4FE1\u606F\n  advancePositionWithMutation(context, source, endIndex);\n\n  context.source = source.slice(endIndex);\n  console.log(context.source)\n}\n\nfunction parseTextData(context, endIndex) {\n  const rawText = context.source.slice(0, endIndex);\n  //\u4E0B\u9762\u51FD\u6570\u5B9E\u73B0\u6D88\u8D39\n  advanceBy(context, endIndex)\n  return rawText;\n}\nfunction getSelection(context,start,end?){\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source:context.originalSource.slice(start.offset,end.offset),\n  }\n}\n\nfunction parseText(context) {\n  //\u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019\uFF0C\u8981\u770B \u540E\u9762\u5230\u54EA\u91CC\u7ED3\u675F\n  let endTokens = ['<', '{{'];\n  let endIndex = context.source.length;//\u9ED8\u8BA4\u8BA4\u4E3A\u5230\u6700\u540E\u7ED3\u675F\n\n  for (let i = 0; i < endTokens.length; i++) {\n    let index = context.source.indexOf(endTokens[i], 1);\n    //\u627E\u5230\u4E86\uFF0C\u5E76\u4E14\u7B2C\u4E00\u6B21\u6BD4\u6574\u4E2A\u5B57\u7B26\u4E32\u5C0F\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  //\u521B\u5EFA\u884C\u5217\u4FE1\u606F\u3001\n   const start=  getCursor(context)//\u5F00\u59CB\n  //\u53D6\u5185\u5BB9\n  const content = parseTextData(context, endIndex);\n  return {\n    type:NodeTypes.TEXT,\n    content:content,\n    loc:getSelection(context,start),\n  }\n}\n\nfunction parse(template) {\n  //\u521B\u5EFA\u4E00\u4E2A\u89E3\u6790\u7684\u4E0A\u4E0B\u6587\uFF0C\u6765\u8FDB\u884C\u5904\u7406 \n  const context = createParserContext(template);\n  // < \u5143\u7D20\n  // {{}}\u8BF4\u660E\u8868\u8FBE\u5F0F\n  //\u5176\u4ED6\u5C31\u662F\u6587\u672C\n  const nodes = [];\n  while (!isEnd(context)) {\n    const { source } = context;\n    let node;\n    if (source.startsWith('{{')) {\n      node = '';\n    } else if (source[0] === '<') {//\u6807\u7B7E\n      node = ''\n    }//\u6587\u672C\n    if (!node) {\n      node = parseText(context);\n        console.log(node)\n\n    }\n    nodes.push(node);\n\n  }\n}\n\nexport function compile(template) {\n  const ast = parse(template);//\u8FD9\u91CC\u9700\u8981\u5C06html\u8BED\u6CD5\u8F6C\u6362\u6210javascript\u8BED\u6CD5\n  //\u5BF9ast\u8BED\u6CD5\u4E66\u5C3D\u5FC3\u4E00\u4E9B\u9884\u5148\u5904\u7406\n\n  //Transform(ast);\n  console.log('fgvdfbdfbdf')\n  //return generate(ast);\n\n}\n\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,WAAS,oBAAoB,UAAe;AAC1C,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IAClB;AAAA,EACF;AAGA,WAAS,MAAM,SAAS;AACtB,UAAM,SAAS,QAAQ;AACvB,WAAO,CAAC;AAAA,EACV;AACA,WAAS,UAAU,SAAS;AAC1B,QAAI,EAAE,MAAM,QAAQ,OAAO,IAAI;AAC/B,WAAO,EAAE,MAAM,QAAQ,OAAO;AAAA,EAChC;AAEA,WAAS,4BAA4B,SAAS,QAAQ,UAAU;AAC9D,QAAI,YAAY;AAChB,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,UAAI,OAAO,WAAW,CAAC,KAAK,IAAI;AAC9B;AACA,kBAAU;AAAA,MACZ;AAAA,IACF;AACA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,SAAS,WAAU,KAAG,QAAQ,SAAO,WAAS,WAAW;AAAA,EACnE;AACA,WAAS,UAAU,SAAS,UAAU;AACpC,QAAI,SAAS,QAAQ;AAErB,gCAA4B,SAAS,QAAQ,QAAQ;AAErD,YAAQ,SAAS,OAAO,MAAM,QAAQ;AACtC,YAAQ,IAAI,QAAQ,MAAM;AAAA,EAC5B;AAEA,WAAS,cAAc,SAAS,UAAU;AACxC,UAAM,UAAU,QAAQ,OAAO,MAAM,GAAG,QAAQ;AAEhD,cAAU,SAAS,QAAQ;AAC3B,WAAO;AAAA,EACT;AACA,WAAS,aAAa,SAAQ,OAAM,KAAK;AACvC,UAAM,OAAO,UAAU,OAAO;AAC9B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,QAAO,QAAQ,eAAe,MAAM,MAAM,QAAO,IAAI,MAAM;AAAA,IAC7D;AAAA,EACF;AAEA,WAAS,UAAU,SAAS;AAE1B,QAAI,YAAY,CAAC,KAAK,IAAI;AAC1B,QAAI,WAAW,QAAQ,OAAO;AAE9B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU,IAAI,CAAC;AAElD,UAAI,UAAU,MAAM,WAAW,OAAO;AACpC,mBAAW;AAAA,MACb;AAAA,IACF;AAEC,UAAM,QAAQ,UAAU,OAAO;AAEhC,UAAM,UAAU,cAAc,SAAS,QAAQ;AAC/C,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,KAAI,aAAa,SAAQ,KAAK;AAAA,IAChC;AAAA,EACF;AAEA,WAAS,MAAM,UAAU;AAEvB,UAAM,UAAU,oBAAoB,QAAQ;AAI5C,UAAM,QAAQ,CAAC;AACf,WAAO,CAAC,MAAM,OAAO,GAAG;AACtB,YAAM,EAAE,OAAO,IAAI;AACnB,UAAI;AACJ,UAAI,OAAO,WAAW,IAAI,GAAG;AAC3B,eAAO;AAAA,MACT,WAAW,OAAO,OAAO,KAAK;AAC5B,eAAO;AAAA,MACT;AACA,UAAI,CAAC,MAAM;AACT,eAAO,UAAU,OAAO;AACtB,gBAAQ,IAAI,IAAI;AAAA,MAEpB;AACA,YAAM,KAAK,IAAI;AAAA,IAEjB;AAAA,EACF;AAEO,WAAS,QAAQ,UAAU;AAChC,UAAM,MAAM,MAAM,QAAQ;AAI1B,YAAQ,IAAI,aAAa;AAAA,EAG3B;",
  "names": []
}
